{"version":3,"sources":["components/Orbit.js","components/Background.js","components/Floor.js","components/Bulb.js","state.js","components/ColorPicker.js","components/Dragable.js","components/Models.js","components/BoudingBox.js","components/Cars.js","components/CameraControls.js","components/CameraButtons.js","components/Lights.js","components/Effects.js","App.js","reportWebVitals.js","index.js"],"names":["extend","OrbitControls","Orbit","useThree","camera","gl","attach","args","domElement","Background","props","texture","useLoader","THREE","process","formatted","useMemo","image","height","fromEquirectangularTexture","object","Floor","useBox","ref","receiveShadow","transparent","opacity","Bulb","useRef","scene","useEffect","lights","push","castShadow","emissive","state","activeMesh","activeMeshName","cameraPos","target","shouldUpdate","ColorPicker","handleClick","e","material","color","style","background","position","zIndex","left","right","margin","width","display","top","onClick","DragControls","Dragable","controlsRef","groupRef","useState","children","setChildren","console","log","current","addEventListener","orbitControls","enabled","api","mass","set","copy","velocity","transformGroup","Model","mixer","model","GLTFLoader","path","animations","length","forEach","clip","clipAction","play","useFrame","delta","update","traverse","child","isMesh","recieveShadow","side","scale","BoundingBox","offset","dims","visible","wireframe","Cars","fallback","Models","Array","fill","rotation","Math","PI","CameraControls","name","getObjectByName","lerp","diff","clone","sub","bottom","textAlign","borderRadius","fontSize","fontWeight","border","cursor","CameraButtons","sets","num","Lights","intensity","Effects","setLights","focusDistance","focalLength","bokehScale","map","light","sun","uuid","App","powerPreference","antialias","stencil","depth","shadows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c334a76.chunk.js","sourcesContent":["import { extend, useThree } from \"@react-three/fiber\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nextend({ OrbitControls });\n\nconst Orbit = () => {\n  // destruct\n  const { camera, gl } = new useThree();\n  return <orbitControls attach='orbitControls' args={[camera, gl.domElement]} />;\n};\n\nexport default Orbit;","import { useLoader, useThree } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { useMemo } from 'react';\n\nconst Background = props => {\n    const texture = useLoader(\n        THREE.TextureLoader,\n        process.env.PUBLIC_URL + '/autoshop.jpeg'\n    );\n\n    const { gl } = useThree();\n    const formatted = useMemo(() => \n        new THREE.WebGLCubeRenderTarget(\n                texture.image.height\n        ).fromEquirectangularTexture(gl, texture)\n    ,[])\n\n    return (\n        <primitive\n            attach='background'\n            object={formatted.texture}\n        />\n    )\n}\n\nexport default Background;\n\n\n// import * as THREE from \"three\";\n// import { useThree, useLoader } from \"@react-three/fiber\";\n\n// const Background = (props) => {\n//   const { scene } = useThree();\n//   const texture = useLoader(THREE.TextureLoader, \"autoshop.jpeg\");\n//   texture.mapping = THREE.EquirectangularReflectionMapping;\n//   scene.background = texture;\n//   return null;\n// };\n\n// export default Background;\n","import { useBox } from \"@react-three/cannon\";\n\nconst Floor = (props) => {\n  // ref is a regular react ref\n  const [ref, api] = useBox(() => ({args: [20, 1, 10], ...props }))\n  return (\n    <mesh ref={ref} {...props} receiveShadow>\n      <boxBufferGeometry args={[200, 1, 200]} />\n      <meshPhysicalMaterial transparent opacity={0.3} />\n    </mesh>\n  );\n};\n\nexport default Floor;","import { useEffect, useRef } from \"react\";\nimport { useThree } from \"@react-three/fiber\";\n\nconst Bulb = (props) => {\n  // add godrays to this component\n  const ref = useRef();\n  const {scene} = useThree()\n  // will run aftet the first render\n  useEffect(() => {\n    // check if there is already a \n    // lights array - if true => push ref(lights array)\n    if (scene.lights) scene.lights.push(ref)\n    else scene.lights = [ref]\n  }, [])\n\n  return (\n    <mesh {...props} ref={ref}>\n      <pointLight\n        castShadow\n        shadow-mapSize-height={2 ** 10}\n        shadow-mapSize-width={2 ** 10}\n        shadow-radiues={10}\n      />\n      <sphereBufferGeometry args={[0.2, 20, 10]} />\n      <meshPhongMaterial emissive=\"white\" />\n    </mesh>\n  );\n};\n\nexport default Bulb;\n","import * as THREE from 'three'\n// model3: \"Capot001_CAR_PAINT_0\" \n// models: \"object005_bod_0\"\n\nconst state = {\n  activeMesh: {},\n  activeMeshName: \"Capot001_CAR_PAINT_0\",\n  cameraPos: new THREE.Vector3(9,2,4),\n  // position of our model3\n  target: new THREE.Vector3(4,0,0),\n  // for camera,\n  shouldUpdate: true,\n}\n\nexport default state;","import * as THREE from \"three\";\nimport state from '../state'\n\nconst ColorPicker = (props) => {\n  const handleClick = (e) => {\n    // if no active mesh in state - return otherwise change color of active mesh\n    if (!state.activeMesh) return;\n    state.activeMesh.material.color = new THREE.Color(\n      e.target.style.background\n    );\n  };\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        zIndex: 1,\n        left: 0,\n        right: 0,\n        margin: \"auto\",\n        width: \"fit-content\",\n        display: 'flex',\n        top: '20px'\n      }}\n    >\n      <div\n        onClick={handleClick}\n        style={{ background: \"blue\", height: 50, width: 50 }}\n      ></div>\n      <div\n        onClick={handleClick}\n        style={{ background: \"yellow\", height: 50, width: 50 }}\n      ></div>\n      <div\n        onClick={handleClick}\n        style={{ background: \"white\", height: 50, width: 50 }}\n      ></div>\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import { DragControls } from \"three/examples/jsm/controls/DragControls\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { extend, useThree } from \"@react-three/fiber\";\nextend({ DragControls });\n\nconst Dragable = (props) => {\n  // ref to get access to our controlObject\n  const controlsRef = useRef();\n  const groupRef = useRef();\n  const [children, setChildren] = useState([]);\n  // orbbit controls on set in the scene\n  const { camera, gl, scene } = useThree();\n\n  useEffect(() => {\n    console.log(groupRef.current);\n    setChildren(groupRef.current.children);\n  }, []);\n\n  // is triggered when there is a change in children\n  useEffect(() => {\n    controlsRef.current.addEventListener(\n      \"hoveron\",\n      (e) =>\n        // set orbit controls to false to allow us to drag our box\n        // without messing with the orbbit controls\n        scene.orbitControls.enabled = false\n    );\n    controlsRef.current.addEventListener(\n      \"hoveroff\",\n      (e) =>\n        // set back to true once pointer is not hovering \n        scene.orbitControls.enabled = true\n    );\n    controlsRef.current.addEventListener(\n      \"dragstart\",\n      (e) =>\n        // set mass to 0 to prevent it from falling on dragStart\n        // added ? operator so that it will just return undefined instead\n        // of erroring out if the value is not defined\n        e.object.api?.mass.set(0)\n    );\n    controlsRef.current.addEventListener(\n      \"dragend\",\n      (e) =>\n        // reset the mass when done\n        // object will fall again when thhe user isn't dragging it\n        e.object.api?.mass.set(1)\n    );\n    controlsRef.current.addEventListener(\n      \"drag\",\n      (e) =>\n        {\n          e.object.api?.position.copy(e.object.position)\n          // prevent it from bouncing off other objects\n          e.object.api?.velocity.set(0,0,0)\n        }\n    );\n  }, [children, scene]);\n\n  return (\n    <group ref={groupRef}>\n      {/* pass children thhat were set withh useState */}\n      <dragControls\n        transformGroup={props.transformGroup}\n        ref={controlsRef}\n        args={[children, camera, gl.domElement]}\n      />\n      {props.children}\n    </group>\n  );\n};\n\nexport default Dragable;\n","import { useLoader, useFrame } from \"@react-three/fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport * as THREE from \"three\";\n\nconst Model = (props) => {\n  const model = useLoader(GLTFLoader, process.env.PUBLIC_URL + props.path);\n\n  let mixer;\n  if (model.animations.length > 0) {\n    mixer = new THREE.AnimationMixer(model.scene);\n    model.animations.forEach((clip) => {\n      const action = mixer.clipAction(clip);\n      action.play();\n    });\n  }\n\n  // delta - some seconds since the last frame\n  useFrame((scene, delta) => {\n    mixer?.update(delta);\n  });\n\n  // go through an object and all of its children\n  model.scene.traverse((child) => {\n    if (child.isMesh) {\n      child.castShadow = true;\n      child.recieveShadow = true;\n      child.material.side = THREE.FrontSide;\n    }\n  });\n\n  return <primitive object={model.scene} scale={props.scale} />;\n};\n\nexport default Model;\n","import { useBox } from \"@react-three/cannon\";\n\nconst BoundingBox = ({\n  position = [0, 0, 0],\n  offset = [0, 0, 0],\n  // dimensions\n  dims = [1, 1, 1],\n  visible = false,\n  children,\n}) => {\n  const [ref, api] = useBox(() => ({\n    mass: 1,\n    args: dims,\n    position: position,\n  }));\n\n  return (\n    <group ref={ref} api={api}>\n      <mesh scale={dims} visible={visible}>\n        <boxBufferGeometry />\n        <meshPhysicalMaterial wireframe />\n      </mesh>\n      {/* adjust children relative to the bounty box */}\n      <group position={offset}>{children}</group>\n    </group>\n  );\n};\n\nexport default BoundingBox","import { Suspense } from \"react\";\nimport Dragable from \"./Dragable\";\nimport Models from \"./Models\";\n// for debugging\nimport BoundingBox from \"./BoudingBox\";\nimport Model from \"./Models\";\n\nconst Cars = ({}) => {\n  return (\n    <Suspense fallback={null}>\n      <Dragable transformGroup>\n        <BoundingBox\n          position={[4, 4, 0]}\n          // bbounty box dimesions\n          dims={[3, 2, 6]}\n          // moves model forward\n          offset={[0, -0.4, 0.8]}\n        >\n          <Models\n            path=\"/tesla_model_3/scene.gltf\"\n            scale={new Array(3).fill(0.01)}\n          />\n        </BoundingBox>\n      </Dragable>\n      <Dragable transformGroup>\n        <BoundingBox\n          position={[-4, 4, 0]}\n          dims={[3, 2, 7.1]}\n          offset={[0, -0.8, 0.2]}\n        >\n          <Models\n            path=\"/tesla_model_s/scene.gltf\"\n            scale={new Array(3).fill(0.013)}\n          />\n        </BoundingBox>\n      </Dragable>\n      <group rotation={[0, Math.PI, 0]}>\n        <Model \n          path=\"/mech_drone/scene.gltf\" \n          scale={new Array(3).fill(0.01)} \n        />\n      </group>\n    </Suspense>\n  );\n};\n\nexport default Cars;\n","import { useFrame } from \"@react-three/fiber\";\nimport state from \"../state\";\nimport * as THREE from \"three\";\n\nconst CameraControls = ({}) => {\n\n\n  useFrame(({ camera, scene }) => {\n    if(state.activeMesh.name !== state.activeMeshName) {\n      state.activeMesh = scene.getObjectByName(\n        state.activeMeshName\n      ) || {}\n    }\n\n    if (state.shouldUpdate) {\n      // interpolates vectors\n      camera.position.lerp(state.cameraPos, 0.1);\n      // set camera to target one of the models\n      scene.orbitControls.target.lerp(state.target, 0.1)\n\n      scene.orbitControls.update();\n      // copy so that we dont modify the original vector\n      const diff = camera.position.clone().sub(state.cameraPos).length();\n      console.log(\"diff\", diff)\n      // check if cam pos is = to state cam position\n      if (diff < 0.1) state.shouldUpdate = false;\n    }\n  });\n\n  return null;\n};\n\nexport default CameraControls;\n","import state from \"../state\";\n\nconst style = {\n  zIndex: 1,\n  position: \"absolute\",\n  bottom: \"30vh\",\n  // left: \"40vw\",\n  height: \"30px\",\n  width: \"30px\",\n  background: \"white\",\n  textAlign: \"center\",\n  borderRadius: \"100%\",\n  fontSize: 20,\n  fontWeight: \"bold\",\n  opacity: 0.7,\n  border: \"1px solid black\",\n  cursor: \"pointer\",\n};\n\nconst CameraButtons = ({}) => {\n  const sets = {\n    1: {\n      cameraPos: [9, 2, 4],\n      target: [4, 0, 0],\n      name: \"Capot001_CAR_PAINT_0\",\n    },\n    2: {\n      cameraPos: [1, 2, 5],\n      target: [-4, 0, 0],\n      name: \"object005_bod_0\",\n    },\n  };\n\n  const handleClick = (num) => {\n    state.cameraPos.set(...sets[num].cameraPos);\n    state.target.set(...sets[num].target);\n    state.activeMeshName = sets[num].name;\n    state.shouldUpdate = true;\n  };\n\n  return (\n    <>\n      <button\n        onClick={(e) => handleClick(2)}\n        style={{\n          left: \"40vw\",\n          ...style,\n        }}\n      >\n        {\"<\"}\n      </button>\n      <button\n        onClick={(e) => handleClick(1)}\n        style={{\n          right: \"40vw\",\n          ...style,\n        }}\n      >\n        {\">\"}\n      </button>\n    </>\n  );\n};\n\nexport default CameraButtons;\n","import Bulb from \"./Bulb\";\n\nconst Lights = () => {\n  return (\n    <>\n      <ambientLight intensity={0.2} />\n      <directionalLight\n        shadow-mapSize-height={2 ** 10}\n        shadow-mapSize-width={2 ** 10}\n        shadow-radiues={10}\n        castShadow\n        intensity={2}\n        position={[6, 3, 0]}\n      />\n      <Bulb position={[-6, 3, 0]} />\n      <Bulb position={[0, 3, 0]} />\n      <Bulb position={[6, 3, 0]} />\n    </>\n  );\n};\n\nexport default Lights;\n","import {\n  EffectComposer,\n  DepthOfField,\n  Bloom,\n  GodRays,\n} from \"@react-three/postprocessing\";\nimport { useEffect, useState } from \"react\";\nimport { useThree } from \"@react-three/fiber\";\n\nconst Effects = () => {\n  // local state to track lights\n  const [lights, setLights] = useState(null);\n  const { scene } = useThree();\n  useEffect(() => {\n    if (scene.lights && scene.lights.length === 3) {\n      setLights(scene.lights);\n    }\n  }, [scene.lights]);\n  return lights ? (\n    <EffectComposer>\n      <DepthOfField\n        focusDistance={0}\n        focalLength={0.02}\n        bokehScale={0.5}\n        height={480}\n      />\n      {/* go through lights and add a \n      gods array for each one */}\n      {lights.map((light) => (\n        <GodRays \n          key={light.current.uuid}\n          sun={light.current} \n        />\n      ))}\n    </EffectComposer>\n  ) : null;\n};\n\nexport default Effects;\n","import \"./App.css\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Suspense } from \"react\";\nimport { Physics } from \"@react-three/cannon\";\nimport Orbit from \"./components/Orbit\";\nimport Background from \"./components/Background\";\nimport Floor from \"./components/Floor\";\nimport Bulb from \"./components/Bulb\";\nimport ColorPicker from \"./components/ColorPicker\";\nimport Cars from \"./components/Cars\";\nimport CameraControls from \"./components/CameraControls\";\nimport CameraButtons from \"./components/CameraButtons\";\nimport Lights from \"./components/Lights\";\nimport Effects from \"./components/Effects\";\n\nfunction App() {\n  return (\n    <div style={{ height: \"100vh\", width: \"100vw\" }}>\n      <ColorPicker />\n      <CameraButtons />\n      <Canvas\n        gl={{\n          powerPreference: \"high-performance\",\n          antialias: false,\n          stencil: false,\n          depth: false,\n        }}\n        shadows\n        style={{ background: \"black\" }}\n        camera={{ position: [7, 7, 7] }}\n      >\n        <Suspense fallback={null}>\n          <Background />\n        </Suspense>\n        <CameraControls />\n        {/* <fog attach=\"fog\" args={[\"white\", 1, 10]} /> */}\n        <Lights />\n        <Orbit />\n        {/* <axesHelper args={[5]} /> */}\n        <Physics>\n          <Cars />\n          <Floor position={[0, -0.5, 0]} />\n        </Physics>\n        <Effects />\n      </Canvas>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}